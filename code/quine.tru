# < is 60
# > is 62
# ( is 40
# ) is 41
# [ is 91
# ] is 93


(9999)(60)(60)(62)(62)(62)(60)(60)(62)(60)(93)(60)(60)(62)(62)(62)(60)(60)(60)(60)(41)(1)(40)(41)(9998)(40)(60)(60)(62)(62)(93)(41)(0)(40)(62)(60)(62)(41)(0)(40)(41)(7777)(40)(62)(60)(62)(41)(1)(40)(60)(60)(62)(62)(60)(62)(60)(62)(60)(62)(62)(62)(60)(60)(62)(62)(62)(60)(62)(41)(0)(40)(91)(60)(60)(62)(62)(60)(62)(41)(1)(40)(93)(41)(0)(40)(62)(60)(62)(41)(0)(40)(41)(8888)(40)(62)(60)(62)(41)(1)(40)(62)(60)(62)(62)(60)(62)(60)(62)(60)(62)(62)(62)(60)(60)(62)(62)(62)(60)(62)(41)(0)(40)(91)(60)(60)(62)(62)(62)(62)(60)(41)(2)(40)(62)(60)(62)(41)(1)(40)(62)(60)(62)(62)(62)(60)(60)(60)(62)(60)(62)(41)(0)(40)(62)(60)(62)(62)(62)(62)(62)(60)(41)(40)(40)(60)(60)(62)(62)(62)(60)(62)(62)(62)(62)(62)(60)(41)(7777)(40)(62)(60)(62)(41)(1)(40)(91)(41)(1)(40)(60)(60)(62)(60)(93)(93)(41)(0)(40)(60)(60)(62)(62)(60)(62)(60)(41)(41)(40)(62)(60)(62)(62)(60)(62)(60)(60)(60)(62)(62)(60)(62)(60)(41)(40)(40)(62)(60)(62)(62)(91)(60)(60)(62)(62)(60)(60)(62)(62)(62)(60)(60)(60)(60)(41)(1)(40)(41)(9998)(40)(60)(60)(62)(62)(62)(60)(62)(41)(0)(40)(91)(41)(1)(40)(60)(60)(62)(60)(93)(60)(60)(62)(62)(62)(60)(60)(60)(60)(41)(1)(40)(41)(9998)(40)(60)(60)(62)(62)(93)(41)(0)(40)(62)(60)(62)(41)(0)(40)(41)(7777)(40)(62)(60)(62)(41)(1)(40)(60)(60)(62)(62)(60)(62)(60)(62)(60)(62)(62)(62)(60)(60)(62)(62)(62)(60)(62)(41)(0)(40)(91)(60)(60)(62)(62)(60)(62)(41)(1)(40)(93)(41)(0)(40)(62)(60)(62)(41)(0)(40)(41)(8888)(40)(62)(60)(62)(41)(1)(40)(62)(60)(62)(62)(60)(62)(60)(62)(60)(62)(62)(62)(60)(60)(62)(62)(62)(60)(62)(41)(0)(40)(91)(60)(60)(62)(62)(62)(62)(60)(41)(2)(40)(62)(60)(62)(41)(1)(40)(62)(60)(62)(62)(62)(60)(60)(60)(62)(60)(62)(41)(0)(40)(62)(60)(62)(62)(62)(62)(62)(60)(41)(40)(40)(60)(60)(62)(62)(62)(60)(62)(62)(62)(62)(62)(60)(41)(7777)(40)(62)(60)(62)(41)(1)(40)(91)(41)(1)(40)

# (10)(10) # newline for debugging output
# 
# # code start
# (9998)(1)<<<
# 
# 
# (9999)
# # code end
# 
# (10)(10) # newline for debugging output
# (60)(60)(60)(41)(1)(40)(41)(9998)(40)(62)(60)(62)(41)(0)(40)(41)(1)(40)(41)(6666)(40)(62)(60)(62)(41)(1)(40)



# loop to reverse the data for print
(1)><>(9998)(1)<<< # terminator
(1)[
(0)><>
>><<(9998)(1)<<< <>>><< >><< # eq to 9999?
[>><> >>><> (0)] # print as int push

]<><< # discard terminator

# loop to print the data
(40) <><>><< (9998)(1)<<< <><>><> (41) <><>><< # print the terminator
(0)><>(9998)(1)<<< # terminator
(1)[
(1)><>
>><<(9998)(1)<<< <>>><< >><< # eq to 9999?
[>><> (40) <><>><< >><< >>><> <><>><> (41) <><>><< (0)] # print as int push
]<><< # discard terminator

(10)(10)<><>><< <><>><< # linebreak for debugging output

# dummy prev
(1)><>(6666)(1)

# loop to print header
(1)[
(1)><>
(7777) <>> >>><> # eq to 1? save result in the other stack
>><< (40)<>> >>><> # eq to 40? save result in the other stack
(0)><>
<<< >>><>

(1) ><>
(2) <>>
>><<
[(0)><> >><< >>><> <><>><> (1)><>(8888) (0)><>(0)] # (8888) indicates that int was printed

(1)><> ><<
[(0)><> >><< >>><> <><>><< (1)><>(7777) (0)><>(0)] # (7777) indicates that utf-8 was printed

>><<(9998)(1)<<< <>>><< # terminator
]<><< # discard terminator

# loop to print the data
(1)[
(0)><>

>><<(9998)(1)<<< <>>><< >><< # eq to 9999?
[>><> (40) <><>><< <><>><> (41) <><>><< (0)] # print as int push
]<><< # discard terminator

# loop to print the code
(1)[
(1)><>
(7777) <>> >>><> # eq to 1? save result in the other stack
>><< (40)<>> >>><> # eq to 40? save result in the other stack
(0)><>
<<< >>><>

(1) ><>
(2) <>>
>><<
[(0)><> >><< >>><> <><>><> (1)><>(8888) (0)><>(0)] # (8888) indicates that int was printed

(1)><> ><<
[(0)><> >><< >>><> <><>><< (1)><>(7777) (0)><>(0)] # (7777) indicates that utf-8 was printed

>><<(9998)(1)<<< <>>><< # terminator
]<><< # discard terminator

>>><<
